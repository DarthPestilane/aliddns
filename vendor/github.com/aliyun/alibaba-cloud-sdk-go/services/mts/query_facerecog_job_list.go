package mts

//Licensed under the Apache License, Version 2.0 (the "License");
//you may not use this file except in compliance with the License.
//You may obtain a copy of the License at
//
//http://www.apache.org/licenses/LICENSE-2.0
//
//Unless required by applicable law or agreed to in writing, software
//distributed under the License is distributed on an "AS IS" BASIS,
//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//See the License for the specific language governing permissions and
//limitations under the License.
//
// Code generated by Alibaba Cloud SDK Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is regenerated.

import (
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests"
	"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses"
)

func (client *Client) QueryFacerecogJobList(request *QueryFacerecogJobListRequest) (response *QueryFacerecogJobListResponse, err error) {
	response = CreateQueryFacerecogJobListResponse()
	err = client.DoAction(request, response)
	return
}

func (client *Client) QueryFacerecogJobListWithChan(request *QueryFacerecogJobListRequest) (<-chan *QueryFacerecogJobListResponse, <-chan error) {
	responseChan := make(chan *QueryFacerecogJobListResponse, 1)
	errChan := make(chan error, 1)
	err := client.AddAsyncTask(func() {
		defer close(responseChan)
		defer close(errChan)
		response, err := client.QueryFacerecogJobList(request)
		responseChan <- response
		errChan <- err
	})
	if err != nil {
		errChan <- err
		close(responseChan)
		close(errChan)
	}
	return responseChan, errChan
}

func (client *Client) QueryFacerecogJobListWithCallback(request *QueryFacerecogJobListRequest, callback func(response *QueryFacerecogJobListResponse, err error)) <-chan int {
	result := make(chan int, 1)
	err := client.AddAsyncTask(func() {
		var response *QueryFacerecogJobListResponse
		var err error
		defer close(result)
		response, err = client.QueryFacerecogJobList(request)
		callback(response, err)
		result <- 1
	})
	if err != nil {
		defer close(result)
		callback(nil, err)
		result <- 0
	}
	return result
}

type QueryFacerecogJobListRequest struct {
	*requests.RpcRequest
	ResourceOwnerId      requests.Integer `position:"Query" name:"ResourceOwnerId"`
	ResourceOwnerAccount string           `position:"Query" name:"ResourceOwnerAccount"`
	OwnerAccount         string           `position:"Query" name:"OwnerAccount"`
	FacerecogJobIds      string           `position:"Query" name:"FacerecogJobIds"`
	OwnerId              requests.Integer `position:"Query" name:"OwnerId"`
}

type QueryFacerecogJobListResponse struct {
	*responses.BaseResponse
	RequestId   string `json:"RequestId" xml:"RequestId"`
	NonExistIds struct {
		String []string `json:"String" xml:"String"`
	} `json:"NonExistIds" xml:"NonExistIds"`
	FacerecogJobList struct {
		FacerecogJob []struct {
			Id           string `json:"Id" xml:"Id"`
			UserData     string `json:"UserData" xml:"UserData"`
			PipelineId   string `json:"PipelineId" xml:"PipelineId"`
			State        string `json:"State" xml:"State"`
			Code         string `json:"Code" xml:"Code"`
			Message      string `json:"Message" xml:"Message"`
			CreationTime string `json:"CreationTime" xml:"CreationTime"`
			Input        struct {
				Bucket   string `json:"Bucket" xml:"Bucket"`
				Location string `json:"Location" xml:"Location"`
				Object   string `json:"Object" xml:"Object"`
			} `json:"Input" xml:"Input"`
			VideoFacerecogResult struct {
				Facerecogs struct {
					Facerecog []struct {
						Time  string `json:"Time" xml:"Time"`
						Faces struct {
							Face []struct {
								Name   string `json:"Name" xml:"Name"`
								Score  string `json:"Score" xml:"Score"`
								Target string `json:"Target" xml:"Target"`
							} `json:"Face" xml:"Face"`
						} `json:"Faces" xml:"Faces"`
					} `json:"Facerecog" xml:"Facerecog"`
				} `json:"Facerecogs" xml:"Facerecogs"`
			} `json:"VideoFacerecogResult" xml:"VideoFacerecogResult"`
		} `json:"FacerecogJob" xml:"FacerecogJob"`
	} `json:"FacerecogJobList" xml:"FacerecogJobList"`
}

func CreateQueryFacerecogJobListRequest() (request *QueryFacerecogJobListRequest) {
	request = &QueryFacerecogJobListRequest{
		RpcRequest: &requests.RpcRequest{},
	}
	request.InitWithApiInfo("Mts", "2014-06-18", "QueryFacerecogJobList", "mts", "openAPI")
	return
}

func CreateQueryFacerecogJobListResponse() (response *QueryFacerecogJobListResponse) {
	response = &QueryFacerecogJobListResponse{
		BaseResponse: &responses.BaseResponse{},
	}
	return
}
